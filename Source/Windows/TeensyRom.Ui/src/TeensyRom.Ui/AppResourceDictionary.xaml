<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:helpers="clr-namespace:TeensyRom.Ui.Helpers"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <SolidColorBrush x:Key="EnabledColor" Color="#7FDBD6"/>

    <Style x:Key="PlaybarButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">

        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="5 0 5 0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}"/>
                <Setter Property="Foreground" Value="DarkGray"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolbarBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="BorderThickness" Value="0.2"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Padding" Value="0 0 5 0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Height" Value="45"/>
    </Style>
    
    <Style x:Key="PlaybarPrevSkipButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">

        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="5 0 5 0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkGray"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ShuffleModeButtonStyle" TargetType="Button" BasedOn="{StaticResource PlaybarPrevSkipButton}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Style.Triggers> 
            <DataTrigger Binding="{Binding ShuffleModeEnabled}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource EnabledColor}"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding ShuffleModeEnabled}" Value="False">
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="StorageIconButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">

        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkGray"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TinyIconButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">

        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkGray"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CornerButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">

        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkGray"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowBorder" TargetType="Border"></Style>

    <Style x:Key="SectionTitle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
    </Style>

    <Style x:Key="SearchButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="-35, -25, 0, 0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkGray"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </Trigger>
        </Style.Triggers>        
    </Style>

    <Style x:Key="LargeLabel" TargetType="Label">
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Foreground" Value="White"/>        
    </Style>

    <Style x:Key="MainTitle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="LightButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedSecondaryLightButton}">
        <Setter Property="Width" Value="120" />
    </Style>

    <Style x:Key="ListBoxItemStretch" TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
    </Style>

    <Style x:Key="gridViewNoHeader" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>

    <DataTemplate x:Key="ConfirmationDialogTemplate">
        <StackPanel Background="#424242" MaxWidth="400">
            <TextBlock Text="{Binding Content}" 
                Foreground="White" 
                FontSize="16" 
                HorizontalAlignment="Left"  
                TextWrapping="Wrap" 
                TextAlignment="Center"
                Margin="20"/>

            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="20">
                <Button Content="OK" 
                    IsDefault="True" 
                    Command="materialDesign:DialogHost.CloseDialogCommand" 
                    CommandParameter="{x:Static sys:Boolean.TrueString}"
                    Margin="10"/>
                <Button Content="CANCEL" 
                    Style="{StaticResource MaterialDesignFlatLightButton}" 
                    IsCancel="True" 
                    Command="materialDesign:DialogHost.CloseDialogCommand" 
                    CommandParameter="{x:Static sys:Boolean.FalseString}"
                    Margin="10"/>
            </StackPanel>
        </StackPanel>
    </DataTemplate>



    <helpers:BoolToVisibilityConvertor x:Key="BoolToVisibilityConvertor"/>
    <helpers:InverseBoolToVisibilityConvertor x:Key="InverseBoolToVisibilityConvertor"/>
    <helpers:BooleanInverterConverter x:Key="BooleanInverterConverter"/>
    <helpers:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
    <helpers:EnumToBooleanConverter x:Key="NullOrEmptyToVisibilityConverter"/>

</ResourceDictionary>