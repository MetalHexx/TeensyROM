<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:helpers="clr-namespace:TeensyRom.Ui.Helpers">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.CheckBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ListBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.PopupBox.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.RadioButton.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.TextBlock.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.ToggleButton.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="PlaybarButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">

        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}"/>
                <Setter Property="Foreground" Value="DarkGray"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="{StaticResource PrimaryHueDarkBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="PlaybarSkipButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">

        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkGray"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueDarkBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="StorageIconButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignIconButton}">

        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkGray"/>
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Foreground" Value="{StaticResource PrimaryHueLightBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowBorder" TargetType="Border"></Style>

    <Style x:Key="SectionTitle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Margin" Value="10"/>
    </Style>

    <Style x:Key="LargeLabel" TargetType="Label">
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Foreground" Value="White"/>        
    </Style>

    <Style x:Key="MainTitle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="LightButton" TargetType="Button" BasedOn="{StaticResource MaterialDesignRaisedSecondaryLightButton}">
        <Setter Property="Width" Value="120" />
    </Style>

    <Style x:Key="ListBoxItemStretch" TargetType="{x:Type ListBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
    </Style>

    <Style x:Key="gridViewNoHeader" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>

    <helpers:BoolToVisibilityConvertor x:Key="BoolToVisibilityConvertor"/>
    <helpers:InverseBoolToVisibilityConvertor x:Key="InverseBoolToVisibilityConvertor"/>
    <helpers:BooleanInverterConverter x:Key="BooleanInverterConverter"/>
    <helpers:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>

</ResourceDictionary>